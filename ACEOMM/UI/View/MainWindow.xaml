<Window x:Class="ACEOMM.UI.View.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:model="clr-namespace:ACEOMM.Domain.Model"
        xmlns:modelB="clr-namespace:ACEOMM.Domain.Model.Businesses"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:behaviors="clr-namespace:ACEOMM.UI.Behaviors"
        Title="Airport CEO Mod Manager" Height="768" Width="1024" WindowStartupLocation="CenterScreen"
        Closing="Window_Closing" Loaded="Window_Loaded">
    <DockPanel>
        <Menu DockPanel.Dock="Top">
            <MenuItem Header="File">
                <MenuItem Header="{StaticResource ExitImage}" Command="{Binding ExitCommand}" />
            </MenuItem>
        </Menu>
        <ToolBarTray DockPanel.Dock="Top">
            <ToolBar>
                <Button Command="{Binding UpdateDataCommand}" ToolTip="Update the data" ToolBar.OverflowMode="Never">
                    <StackPanel Orientation="Vertical">
                        <Image Source="{StaticResource ImportImage}"/>
                        <TextBlock Text="Update" />
                    </StackPanel>
                </Button>
                <Button Command="{Binding SaveDataCommand}" ToolTip="Save your changes" ToolBar.OverflowMode="Never">
                    <StackPanel Orientation="Vertical">
                        <Image Source="{StaticResource SaveImage}"/>
                        <TextBlock Text="Save changes" />
                    </StackPanel>
                </Button>
            </ToolBar>
            <ToolBar>
                <Button Command="{Binding AddModCommand}" ToolTip="Add a new mod (Insert)" ToolBar.OverflowMode="AsNeeded">
                    <StackPanel Orientation="Vertical">
                        <Image Source="{StaticResource AddModImage}"/>
                        <TextBlock Text="Add mod" />
                    </StackPanel>
                </Button>
                <Button Command="{Binding EditEntityCommand}" CommandParameter="{Binding CurrentTreeEntity}" ToolTip="Edit the current item in the tree (Enter)" ToolBar.OverflowMode="Never">
                    <StackPanel Orientation="Vertical">
                        <Image Source="{StaticResource EditEntityImage}"/>
                        <TextBlock Text="Edit tree item" />
                    </StackPanel>
                </Button>
                <Button Command="{Binding RemoveEntityCommand}" ToolTip="Remove the current item in the tree from its parent (Delete)" ToolBar.OverflowMode="AsNeeded">
                    <StackPanel Orientation="Vertical">
                        <Image Source="{StaticResource RemoveEntityImage}"/>
                        <TextBlock Text="Remove tree item" />
                    </StackPanel>
                </Button>
                <Button Command="{Binding InstallModCommand}" ToolTip="Install mod to game folder (F5)" ToolBar.OverflowMode="Never">
                    <StackPanel Orientation="Vertical">
                        <Image Source="{StaticResource InstallModImage}"/>
                        <TextBlock Text="Install mod" />
                    </StackPanel>
                </Button>
                <Button Command="{Binding UninstallModCommand}" ToolTip="Uninstall mod from game folder(F7)" ToolBar.OverflowMode="Never">
                    <StackPanel Orientation="Vertical">
                        <Image Source="{StaticResource UninstallModImage}"/>
                        <TextBlock Text="uninstall mod" />
                    </StackPanel>
                </Button>
            </ToolBar>
            <ToolBar>
                <Button Command="{Binding AddBusinessCommand}" CommandParameter="{x:Static model:BusinessType.Airline}" ToolTip="Add a new airline" ToolBar.OverflowMode="Never">
                    <StackPanel Orientation="Vertical">
                        <Image Source="{StaticResource AirlineImage}"/>
                        <TextBlock Text="Add airline" />
                    </StackPanel>
                </Button>
                <Button Command="{Binding AddBusinessCommand}" CommandParameter="{x:Static model:BusinessType.AviationFuelSupplier}" ToolTip="Add a new aviation fuel supplier" ToolBar.OverflowMode="AsNeeded">
                    <StackPanel Orientation="Vertical">
                        <Image Source="{StaticResource AVFuelSupplierImage}"/>
                        <TextBlock Text="Add fuel supplier" />
                    </StackPanel>
                </Button>
                <Button Command="{Binding AddBusinessCommand}" CommandParameter="{x:Static model:BusinessType.Bank}" ToolTip="Add a new bank" ToolBar.OverflowMode="AsNeeded">
                    <StackPanel Orientation="Vertical">
                        <Image Source="{StaticResource BankImage}"/>
                        <TextBlock Text="Add bank" />
                    </StackPanel>
                </Button>
                <Button Command="{Binding AddBusinessCommand}" CommandParameter="{x:Static model:BusinessType.Contractor}" ToolTip="Add a new contractor" ToolBar.OverflowMode="AsNeeded">
                    <StackPanel Orientation="Vertical">
                        <Image Source="{StaticResource ContractorImage}"/>
                        <TextBlock Text="Add contractor" />
                    </StackPanel>
                </Button>
                <Button Command="{Binding AddBusinessCommand}" CommandParameter="{x:Static model:BusinessType.Franchise}" ToolTip="Add a new franchise" ToolBar.OverflowMode="AsNeeded">
                    <StackPanel Orientation="Vertical">
                        <Image Source="{StaticResource FranchiseImage}"/>
                        <TextBlock Text="Add franchise" />
                    </StackPanel>
                </Button>
                <Button Command="{Binding EditBusinessCommand}" ToolTip="Edit the current business selected in the grid (Enter)" ToolBar.OverflowMode="Never">
                    <StackPanel Orientation="Vertical">
                        <Image Source="{StaticResource EditBusinessImage}"/>
                        <TextBlock Text="Edit business" />
                    </StackPanel>
                </Button>
                <Button Command="{Binding RemoveBusinessCommand}" ToolTip="Remove the current business selected in the grid (Delete)" ToolBar.OverflowMode="AsNeeded">
                    <StackPanel Orientation="Vertical">
                        <Image Source="{StaticResource RemoveBusinessImage}"/>
                        <TextBlock Text="Remove business" />
                    </StackPanel>
                </Button>
                <StackPanel Orientation="Horizontal" Visibility="Collapsed">
                    <Label Content="Group by" />
                    <ComboBox SelectedItem="{Binding SelectedGrouping}" IsSynchronizedWithCurrentItem="True" ItemsSource="{Binding AvailableGroupings}" />
                </StackPanel>
            </ToolBar>
            <ToolBar>
                <Button Command="{Binding AddProductCommand}" ToolTip="Add a new product (Insert)" ToolBar.OverflowMode="AsNeeded">
                    <StackPanel Orientation="Vertical">
                        <Image Source="{StaticResource AddProductImage}"/>
                        <TextBlock Text="Add product" />
                    </StackPanel>
                </Button>
                <Button Command="{Binding EditProductCommand}" ToolTip="Edit the current product (Enter)" ToolBar.OverflowMode="Never">
                    <StackPanel Orientation="Vertical">
                        <Image Source="{StaticResource EditProductImage}"/>
                        <TextBlock Text="Edit product" />
                    </StackPanel>
                </Button>
                <Button Command="{Binding RemoveProductCommand}" ToolTip="Remove the current product (Delete)" ToolBar.OverflowMode="AsNeeded">
                    <StackPanel Orientation="Vertical">
                        <Image Source="{StaticResource RemoveProductImage}"/>
                        <TextBlock Text="Remove product" />
                    </StackPanel>
                </Button>
            </ToolBar>
            <ToolBar>
                <ToggleButton IsChecked="{Binding UseDefaultCompanies}" ToolTip="Swith use default on and off" ToolBar.OverflowMode="Never">
                    <StackPanel Orientation="Vertical">
                        <Image Source="{StaticResource DownloadImage}"/>
                        <TextBlock Text="Use Default companies" />
                    </StackPanel>
                </ToggleButton>
                <ToggleButton IsChecked="{Binding UseDefaultProducts}" ToolTip="Swith use default on and off" ToolBar.OverflowMode="Never">
                    <StackPanel Orientation="Vertical">
                        <Image Source="{StaticResource DownloadImage}"/>
                        <TextBlock Text="Use Default products" />
                    </StackPanel>
                </ToggleButton>
                <Button Command="{Binding DownloadImagesCommand}" ToolBar.OverflowMode="AsNeeded">
                    <StackPanel Orientation="Vertical">
                        <Image Source="{StaticResource DownloadImage}"/>
                        <TextBlock Text="Download images" />
                    </StackPanel>
                </Button>
            </ToolBar>
        </ToolBarTray>
        <TreeView ItemsSource="{Binding Mods}" DockPanel.Dock="Left">
            <i:Interaction.Behaviors>
                <behaviors:BindableSelectedItemBehavior SelectedItem="{Binding CurrentTreeEntity, Mode=TwoWay}" ParentItem="{Binding ParentTreeEntity, Mode=OneWayToSource}" />
            </i:Interaction.Behaviors>
            <TreeView.InputBindings>
                <KeyBinding Key="Delete" Command="{Binding RemoveEntityCommand}" />
                <KeyBinding Key="Insert" Command="{Binding AddModCommand}" />
                <KeyBinding Key="Return" Command="{Binding EditEntityCommand}" CommandParameter="{Binding CurrentTreeEntity}" />
                <KeyBinding Key="F5" Command="{Binding InstallModCommand}" />
                <KeyBinding Key="F7" Command="{Binding UninstallModCommand}" />
            </TreeView.InputBindings>
            <TreeView.ItemContainerStyle>
                <Style TargetType="{x:Type TreeViewItem}" BasedOn="{StaticResource {x:Type TreeViewItem}}">
                    <EventSetter Event="MouseDoubleClick" Handler="OnTreeViewMouseDoubleClick" />
                </Style>
            </TreeView.ItemContainerStyle>
            <TreeView.Resources>
                <DataTemplate DataType="{x:Type model:Business}">
                    <Label Content="{Binding Name}" Background="Red" />
                </DataTemplate>
                <DataTemplate DataType="{x:Type modelB:Product}">
                    <Label Content="{Binding Name}" />
                </DataTemplate>
                <DataTemplate DataType="{x:Type modelB:Airline}">
                    <Label Content="{Binding Name}" Background="{StaticResource AirlineBrush}" />
                </DataTemplate>
                <DataTemplate DataType="{x:Type modelB:AviationFuelSupplier}">
                    <Label Content="{Binding Name}" Background="{StaticResource AVFuelSupplierBrush}" />
                </DataTemplate>
                <DataTemplate DataType="{x:Type modelB:Bank}">
                    <Label Content="{Binding Name}" Background="{StaticResource BankBrush}" />
                </DataTemplate>
                <DataTemplate DataType="{x:Type modelB:Contractor}">
                    <Label Content="{Binding Name}" Background="{StaticResource ContractorBrush}" />
                </DataTemplate>
                <HierarchicalDataTemplate ItemsSource="{Binding Products}" DataType="{x:Type modelB:Franchise}">
                    <Label Content="{Binding Name}" Background="{StaticResource FranchiseBrush}" />
                </HierarchicalDataTemplate>
                <HierarchicalDataTemplate ItemsSource="{Binding Businesses}" DataType="{x:Type model:Mod}">
                    <Label Content="{Binding Name}" />
                </HierarchicalDataTemplate>
            </TreeView.Resources>
        </TreeView>
        <DataGrid ItemsSource="{Binding Products}" SelectedItem="{Binding CurrentProduct}" DockPanel.Dock="Right" AutoGenerateColumns="False" VirtualizingPanel.IsVirtualizingWhenGrouping="True"
                      CanUserAddRows="False" CanUserDeleteRows="False" SelectionMode="Single" SelectionUnit="FullRow" CanUserSortColumns="True" IsSynchronizedWithCurrentItem="True"
                      ScrollViewer.CanContentScroll="True" ScrollViewer.VerticalScrollBarVisibility="Auto" IsReadOnly="True">
            <DataGrid.InputBindings>
                <MouseBinding Gesture="LeftDoubleClick" Command="{Binding EditProductCommand}" />
                <KeyBinding Key="Insert" Command="{Binding AddProductCommand}" />
                <KeyBinding Key="Return" Command="{Binding EditProductCommand}" />
                <KeyBinding Key="Delete" Command="{Binding RemoveProductCommand}" />
            </DataGrid.InputBindings>
            <DataGrid.RowStyle>
                <Style TargetType="DataGridRow">
                    <Setter Property="Background" Value="{Binding Color, Converter={StaticResource ColorToBrushConverter}}">
                    </Setter>
                </Style>
            </DataGrid.RowStyle>
            <DataGrid.Columns>
                <DataGridTextColumn Header="Name" Binding="{Binding Name}" />
                <DataGridTextColumn Header="Type" Binding="{Binding Type}" />
            </DataGrid.Columns>
        </DataGrid>
        <StatusBar DockPanel.Dock="Bottom">
            <StatusBarItem>
                <TextBlock Text="{Binding CurrentAction}" />
            </StatusBarItem>
            <StatusBarItem>
                <ProgressBar Width="90" Height="16" Maximum="{Binding ProgressBarMaximum}" Value="{Binding ProgressBarCurrentValue}" />
            </StatusBarItem>
            <StatusBarItem>
                <StackPanel Orientation="Horizontal">
                    <Label Content="Businesses: " />
                    <Label Content="{Binding Businesses.Count}" />
                </StackPanel>

            </StatusBarItem>
        </StatusBar>
        <DataGrid ItemsSource="{Binding Businesses}" SelectedItem="{Binding CurrentBusiness}" AutoGenerateColumns="False" VirtualizingPanel.IsVirtualizingWhenGrouping="True"
                      CanUserAddRows="False" CanUserDeleteRows="False" SelectionMode="Single" SelectionUnit="FullRow" CanUserSortColumns="True" IsSynchronizedWithCurrentItem="True"
                      ScrollViewer.CanContentScroll="True" ScrollViewer.VerticalScrollBarVisibility="Auto" IsReadOnly="True">
            <DataGrid.InputBindings>
                <MouseBinding Gesture="LeftDoubleClick" Command="{Binding EditBusinessCommand}" />
                <KeyBinding Key="Return" Command="{Binding EditBusinessCommand}" />
                <KeyBinding Key="Delete" Command="{Binding RemoveBusinessCommand}" />
            </DataGrid.InputBindings>
            <!-- <DataGrid.GroupStyle>
                <GroupStyle>
                    <GroupStyle.HeaderTemplate>
                        <DataTemplate>
                            <StackPanel>
                                <TextBlock Text="{Binding Name}" />
                            </StackPanel>
                        </DataTemplate>
                    </GroupStyle.HeaderTemplate>
                    <GroupStyle.ContainerStyle>
                        <Style TargetType="{x:Type GroupItem}">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type GroupItem}">
                                        <Expander>
                                            <Expander.Header>
                                                <StackPanel Orientation="Horizontal">
                                                    <TextBlock Text="{Binding Path=Name}" />
                                                    <TextBlock Text=" ("/>
                                                    <TextBlock Text="{Binding Path=ItemCount}"/>
                                                    <TextBlock Text=" Items )"/>
                                                </StackPanel>
                                            </Expander.Header>
                                            <ItemsPresenter />
                                        </Expander>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </GroupStyle.ContainerStyle>
                </GroupStyle>
            </DataGrid.GroupStyle> -->
            <DataGrid.RowStyle>
                <Style TargetType="DataGridRow">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Type}" Value="{x:Static model:BusinessType.Airline}">
                            <Setter Property="Background" Value="{StaticResource AirlineBrush}" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Type}" Value="{x:Static model:BusinessType.AviationFuelSupplier}">
                            <Setter Property="Background" Value="{StaticResource AVFuelSupplierBrush}" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Type}" Value="{x:Static model:BusinessType.Bank}">
                            <Setter Property="Background" Value="{StaticResource BankBrush}" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Type}" Value="{x:Static model:BusinessType.Contractor}">
                            <Setter Property="Background" Value="{StaticResource ContractorBrush}" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Type}" Value="{x:Static model:BusinessType.Franchise}">
                            <Setter Property="Background" Value="{StaticResource FranchiseBrush}" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.RowStyle>
            <DataGrid.Columns>
                <DataGridTemplateColumn SortMemberPath="Name">
                    <DataGridTemplateColumn.HeaderStyle>
                        <Style TargetType="{x:Type DataGridColumnHeader}">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                        </Style>
                    </DataGridTemplateColumn.HeaderStyle>
                    <DataGridTemplateColumn.HeaderTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Vertical">
                                <TextBox Text="{Binding DataContext.NameFilter, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" />
                                <Label Content="Name" />
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.HeaderTemplate>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Name}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Width="100" SortMemberPath="Description">
                    <DataGridTemplateColumn.HeaderStyle>
                        <Style TargetType="{x:Type DataGridColumnHeader}">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                        </Style>
                    </DataGridTemplateColumn.HeaderStyle>
                    <DataGridTemplateColumn.HeaderTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Vertical">
                                <TextBox Text="{Binding DataContext.DescriptionFilter, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" />
                                <Label Content="Description" />
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.HeaderTemplate>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Description}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn SortMemberPath="CEO">
                    <DataGridTemplateColumn.HeaderStyle>
                        <Style TargetType="{x:Type DataGridColumnHeader}">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                        </Style>
                    </DataGridTemplateColumn.HeaderStyle>
                    <DataGridTemplateColumn.HeaderTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Vertical">
                                <TextBox Text="{Binding DataContext.CeoFilter, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" />
                                <Label Content="CEO" />
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.HeaderTemplate>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding CEO}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn SortMemberPath="Region">
                    <DataGridTemplateColumn.HeaderStyle>
                        <Style TargetType="{x:Type DataGridColumnHeader}">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                        </Style>
                    </DataGridTemplateColumn.HeaderStyle>
                    <DataGridTemplateColumn.HeaderTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Vertical">
                                <TextBox Text="{Binding DataContext.RegionFilter, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" />
                                <Label Content="Region" />
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.HeaderTemplate>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Region}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn SortMemberPath="Country.Name">
                    <DataGridTemplateColumn.HeaderStyle>
                        <Style TargetType="{x:Type DataGridColumnHeader}">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                        </Style>
                    </DataGridTemplateColumn.HeaderStyle>
                    <DataGridTemplateColumn.HeaderTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Vertical">
                                <TextBox Text="{Binding DataContext.CountryFilter, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" />
                                <Label Content="Country" />
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.HeaderTemplate>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Country.Name}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn SortMemberPath="Author">
                    <DataGridTemplateColumn.HeaderStyle>
                        <Style TargetType="{x:Type DataGridColumnHeader}">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                        </Style>
                    </DataGridTemplateColumn.HeaderStyle>
                    <DataGridTemplateColumn.HeaderTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Vertical">
                                <TextBox Text="{Binding DataContext.AuthorFilter, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" />
                                <Label Content="Author" />
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.HeaderTemplate>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Author}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn SortMemberPath="Version">
                    <DataGridTemplateColumn.HeaderStyle>
                        <Style TargetType="{x:Type DataGridColumnHeader}">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                        </Style>
                    </DataGridTemplateColumn.HeaderStyle>
                    <DataGridTemplateColumn.HeaderTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Vertical">
                                <TextBox Text="{Binding DataContext.VersionFilter, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" />
                                <Label Content="Version" />
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.HeaderTemplate>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Version}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn SortMemberPath="Status">
                    <DataGridTemplateColumn.HeaderStyle>
                        <Style TargetType="{x:Type DataGridColumnHeader}">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                        </Style>
                    </DataGridTemplateColumn.HeaderStyle>
                    <DataGridTemplateColumn.HeaderTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Vertical">
                                <TextBox Text="{Binding DataContext.StatusFilter, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" />
                                <Label Content="Status" />
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.HeaderTemplate>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Status}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn SortMemberPath="Type">
                    <DataGridTemplateColumn.HeaderStyle>
                        <Style TargetType="{x:Type DataGridColumnHeader}">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                        </Style>
                    </DataGridTemplateColumn.HeaderStyle>
                    <DataGridTemplateColumn.HeaderTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Vertical">
                                <TextBox Text="{Binding DataContext.TypeFilter, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" />
                                <Label Content="Type" />
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.HeaderTemplate>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Type}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn SortMemberPath="Class">
                    <DataGridTemplateColumn.HeaderStyle>
                        <Style TargetType="{x:Type DataGridColumnHeader}">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                        </Style>
                    </DataGridTemplateColumn.HeaderStyle>
                    <DataGridTemplateColumn.HeaderTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Vertical">
                                <TextBox Text="{Binding DataContext.ClassFilter, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" />
                                <Label Content="Class" />
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.HeaderTemplate>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Class}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>
    </DockPanel>
</Window>
